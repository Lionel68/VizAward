{
    "collab_server" : "",
    "contents" : "########################################################################################\n#                                    # # #                                             #\n#This file is used to create a static visualization of the data for presentation       #\n#code written by Lionel R. Hertzog and Nadja Simmons\n\n#Updated: 17.08.2016\n########################################################################################\n\n# Installing the development version of the leaflet package from github\nlibrary(devtools)\ninstall_github(\"rstudio/leaflet\")\n####\n\nlibrary(leaflet)\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(viridis) # to make color palette\n\n#color palette for the bus line or use busline_colors\ncol_line <- colorFactor(viridis(length(bus_line_list)),as.character(1:length(bus_line_list)))\nopacity_bus_lines <- 0.3\n\nnames(bus_line_list) <- c(1:length(bus_line_list))\n\n# create icons with the leaflet package\nicon_uni<-makeAwesomeIcon(icon=\"university\",library=\"fa\",markerColor=\"red\",iconColor=\"white\")\nicon_bus<-makeAwesomeIcon(icon=\"bus\",library = \"fa\",markerColor=\"darkblue\",iconColor=\"white\")\nicons<-awesomeIconList(\n  bar_pub_bistro=makeAwesomeIcon(icon = \"beer\",library = \"fa\",markerColor = \"orange\",iconColor = \"green\"),\n  restaurant=makeAwesomeIcon(icon = \"cutlery\",library = \"fa\",markerColor = \"white\",iconColor = \"darkred\"),\n  supermarket=makeAwesomeIcon(icon=\"shopping-cart\",library = \"glyphicon\",markerColor = \"cadetblue\",iconColor = \"#c3f971\"),\n  pharmacy=makeAwesomeIcon(icon=\"medkit\",library=\"fa\",markerColor = \"white\",iconColor=\"red\"),\n  accomodation=makeAwesomeIcon(icon=\"building-o\",library=\"fa\",markerColor = \"white\",iconColor = \"yellow\"),\n  bakery=makeAwesomeIcon(icon=\"grain\",library=\"glyphicon\",markerColor = \"white\",iconColor=\"orange\"),\n  cafe=makeAwesomeIcon(icon=\"coffee\",library=\"fa\",markerColor = \"cadetblue\",iconColor=\"orange\"),\n  imbiss=makeAwesomeIcon(icon=\"pizza\",library=\"ion\",markerColor = \"white\",iconColor=\"pink\"),\n  taxi=makeAwesomeIcon(icon=\"taxi\",library=\"fa\",markerColor = \"darkblue\")\n)\n\ncircle_color <- colorFactor(c(\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\"), \n                            domain = c(\"bar_pub_bistro\", \"restaurant\",\"supermarket\",\"pharmacy\",\"accomodation\",\"bakery\",\n                                       \"cafe\",\"imbiss\",\"taxi\"))\n\n# create a dataframe for the lines connecting store markers and bus stops\nstores_lines <- stores\n\nfor (i in 1: nrow(stores)) {\nstores_lines$Longitude[i] <- busstop_new[busstop_new$Name2 == as.character(stores_lines$Name2)[i],\"Longitude\"]\nstores_lines$Latitude[i] <- busstop_new[busstop_new$Name2 == as.character(stores_lines$Name2)[i],\"Latitude\"]\n}\n\nstores_lines <- rbind(stores_lines,stores)\n\n# create the static map\n\nleaflet() %>%\n  setView(lng=8.774149, lat=50.810685,zoom = 14)%>%\n  addTiles(\"https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGlvbmVsNjgiLCJhIjoiY2lyOHVtY2ZqMDAycmlsbHd3cXF4azhzdiJ9.FHJtGBW1bhjCr-JLnC4brw\",\n          option=tileOptions(minZoom=13,maxZoom=18)) %>%\n  # addAwesomeMarkers(data=busstop_new,lng=~Longitude,lat=~Latitude,popup=~Tag)%>%\n  addAwesomeMarkers(lng=8.774149, lat=50.810685, popup=\"The conference venue\",icon=icon_uni)%>%\n  addAwesomeMarkers(data=busstop_new,lng=~Longitude,lat=~Latitude,label=~Name2,icon=icon_bus)%>%\n  # addAwesomeMarkers(data=stores,lng=~Longitude,lat=~Latitude,icon=~icons[Group],label = ~Labels,labelOptions = list(opacity=5)) %>% \n  \n  addPolylines(data=bus_line_list[[1]],stroke=TRUE,color=col_line(1),noClip=FALSE,opacity = opacity_bus_lines)%>%\n  addPolylines(data=bus_line_list[[2]],stroke=TRUE,color=col_line(2),noClip=FALSE,opacity = opacity_bus_lines)%>%\n  addPolylines(data=bus_line_list[[3]],stroke=TRUE,color=col_line(3),noClip=FALSE,opacity = opacity_bus_lines)%>%\n  addPolylines(data=bus_line_list[[4]],stroke=TRUE,color=col_line(4),noClip=FALSE,opacity = opacity_bus_lines)%>%\n  addPolylines(data=bus_line_list[[5]],stroke=TRUE,color=col_line(5),noClip=FALSE,opacity = opacity_bus_lines)%>%\n  addPolylines(data=bus_line_list[[6]],stroke=TRUE,color=col_line(6),noClip=FALSE,opacity = opacity_bus_lines)%>%\n  addPolylines(data=bus_line_list[[7]],stroke=TRUE,color=col_line(7),noClip=FALSE,opacity = opacity_bus_lines)%>%\n  addPolylines(data=bus_line_list[[8]],stroke=TRUE,color=col_line(8),noClip=FALSE,opacity = opacity_bus_lines)%>%\n  addPolylines(data=bus_line_list[[9]],stroke=TRUE,color=col_line(9),noClip=FALSE,opacity = opacity_bus_lines)%>%\n  addPolylines(data=bus_line_list[[10]],stroke=TRUE,color=col_line(10),noClip=FALSE,opacity = opacity_bus_lines) %>%\n  addCircleMarkers(data=stores,radius =10,color = ~circle_color(Group),stroke = FALSE, fillOpacity = 0.9) -> static_map\n\n# Add lines between points and stops\n  for(i in 1:length(unique(stores_lines$StoreID))){\n    store_name <- unique(stores_lines$StoreID)[i]\n    static_map <- addPolylines(static_map, \n                          lat = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, \"Latitude\"])), \n                          lng = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, \"Longitude\"])),\n                          color = \"grey\", fillColor = \"grey\", fillOpacity = 0.9, weight = 2)\n  }\nstatic_map\n  \n# addPolylines(data = stores_lines, lng = ~Longitude, lat = ~Latitude, group = ~StoreID,color = \"#03F\", weight = 5, opacity = 0.5)\n  \n\n# neither a loop nor l_ply worked as a more elegant solution to plotting the bus lines\n  # l_ply(bus_line_list,function(x) addPolylines(data=x,stroke=TRUE,color=col_line(as.numeric(names(x))),noClip=FALSE))\n  \n# TO DO:\n\n# Select a part of the map as an example area\n# Show connecting lines between bus stops and stores\n# Check if there are also round markers, or use color-coded points for stores\n# Alternative: make the markers much smaller\n\n## Idea for upgrade:\n# Use clusterOptions = markerClusterOptions() for the stores in the interactive map and when option is \"show all\"",
    "created" : 1471448801502.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2281263076",
    "id" : "E03B2E9B",
    "lastKnownWriteTime" : 1471606981,
    "last_content_update" : 1471606981142,
    "path" : "C:/Users/Nadja/8-Freising/05_Tagungen_Workshops/GfÃ–-Tagung 2016/Vizualization_Award/Static_map.R",
    "project_path" : "Static_map.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}