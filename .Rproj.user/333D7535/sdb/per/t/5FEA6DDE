{
    "collab_server" : "",
    "contents" : "########################################################################################\n#                                    # # #                                             #\n#This is the server part of the Shiny App for the Visualization awards GfOe 2016\n#code written by Lionel R. Hertzog and Nadja Simmons\n\n#Updated: 28.07.2016\n########################################################################################\n\n#Next steps:\n#Add templates for bus stop infos (DONE)\n#Find markers for the different group of stores (partly done)\n#Make appearance of stores reactive to the click on a nearby bus stop (DONE)\n#Add lines for bus connection (TO DO)\n\n#to load the App use: shinyAppDir(\"~/Documents/PhD/Presentation/GfÖ_2016/Visualization/VizAward_shiny/\")\n\n#load the libraries\nlibrary(shiny)\nlibrary(leaflet)\nlibrary(sp)\nlibrary(plyr)\n#Define the server\nshinyServer(function(input, output) {\n  \n  ################\n  #simulation part\n  set.seed(20160826)\n  #simulate some data for the stores\n  stores<-data.frame(infos=paste(\"Point\",1:30),longitude=8.774149+rnorm(30,0,0.01),latitude=50.810685+rnorm(30,0,0.01),Group=gl(3,10,length = 30,labels = c(\"Restaurant\",\"Bar\",\"Club\")))\n  \n  #simulate some data for the bus stop\n  bus<-data.frame(BusStopID=1:5,BusStopName=letters[1:5],latitude=c(50.818,50.809,50.814,50.804,50.805),longitude=c(8.773,8.774,8.769,8.759,8.781),labels=c(\"<b>Hauptbahnof</b><br/>Linie:<br/><b><a href='http://google.com'>1</a></b>\",\"<b>Uni</b><br/>Linie:<br/><b><a href='http://google.com'>1</a></b>\",\"<b>Marienplatz</b><br/>Linie:<br/><b><a href='http://google.com'>1</a></b>\",\"<b>Marktstrasse</b><br/>Linie:<br/><b><a href='http://google.com'>1</a></b>\",\"<b>Weihenstephan</b><br/>Linie:<br/><b><a href='http://google.com'>1</a></b>\"))\n  \n  #link every store to the nearest bus stop (could change this to a specific distance radius in the future)\n  #when the data are ready this will be set in the store dataframe\n  dist_to_bus<-ddply(bus,\"BusStopID\",function(x) spDistsN1(as.matrix(stores[,c(\"longitude\",\"latitude\")]),as.numeric(x[,c(\"longitude\",\"latitude\")])))\n  stores$BusStopID<-apply(dist_to_bus[,-1],2,function(x) which.min(x))\n  \n  #end of simulation part\n  #will be replaced by data loading in the future\n  ##################################################\n  \n  #create the icons for the stores and the conference center\n  icon_uni<-makeIcon(iconUrl = \"http://icons.iconarchive.com/icons/icons8/windows-8/32/Science-University-icon.png\")\n  icon_store<-iconList(\n    Restaurant = makeIcon(\"http://icons.iconarchive.com/icons/icons8/windows-8/32/City-Restaurant-icon.png\"),\n    Bar= makeIcon(\"http://icons.iconarchive.com/icons/icons8/windows-8/32/Food-Bar-icon.png\"),\n    Club = makeIcon(\"http://icons.iconarchive.com/icons/icons8/windows-8/32/Music-Note-Music-icon.png\"))\n  \n  \n  #subset the store dataframe based on users selection\n  points<-reactive({\n    switch(input$group,\n           \"All\" = stores,\n           \"Restaurant\" = subset(stores,Group==\"Restaurant\"),\n           \"Bar\" = subset(stores,Group==\"Bar\"),\n           \"Club\" = subset(stores,Group==\"Club\"))\n  })\n  \n  #\n  #isClick<-reactiveValues(clickedMarker=NULL)\n  #subset the stores again based on users click on Bus stop\n  #points_b<-reactive({ifelse(is.null(),NULL,subset(points(),BusStopID==input$mymap_shape_click$id))})\n  \n  output$mymap <- renderLeaflet({\n    \n    #create the base map\n    leaflet() %>%\n      addTiles(urlTemplate='http://{s}.tile.opentopomap.org/{z}/{x}/{y}.png') %>%\n      addMarkers(lng=8.774149, lat=50.810685, popup=\"The conference venue\",icon=icon_uni)%>%\n      addCircles(data=bus,lng=~longitude,lat=~latitude,popup=~labels,color=\"red\",radius=10,layerId=~BusStopID)\n    })    \n      \n  #observe the users click on specific bus stop on the map\n  #when the user click on the bus stop all stores related to this bus stop appear\n  observe({\n    proxy<-leafletProxy(\"mymap\")\n    if(!is.null(input$mymap_shape_click)){\n      \n      points_b<-subset(points(),BusStopID==input$mymap_shape_click$id)\n      \n      proxy%>%\n        clearMarkers()%>% #to remove previously appearing stores\n        addMarkers(lng=8.774149, lat=50.810685, popup=\"The conference venue\",icon=icon_uni)%>%\n        addMarkers(data=points_b,lng=~longitude,lat=~latitude,popup = ~infos,icon=~icon_store[Group])\n    }\n  })\n  \n  #if the user click on the map remove all store markers\n  observe({\n    proxy<-leafletProxy(\"mymap\")\n    if(!is.null(input$mymap_click)){\n      proxy%>%\n        clearMarkers()%>%\n        addMarkers(lng=8.774149, lat=50.810685, popup=\"The conference venue\",icon=icon_uni)\n    }\n  })\n      \n      #addPolylines(data=marb_l)\n})\n\n#for testing purposes\n#leaflet() %>%\n#  addTiles(urlTemplate='http://{s}.tile.opentopomap.org/{z}/{x}/{y}.png') %>%\n#  addMarkers(lng=8.774149, lat=50.810685, popup=\"The conference venue\",icon=icon_uni)%>%\n#  addMarkers(data=stores,lng=~longitude,lat=~latitude,popup = ~infos,icon=~icon_store[Group])%>%\n#  addCircles(data=bus,lng=~longitude,lat=~latitude,popup=~labels,color=\"red\",radius=10)\n\n",
    "created" : 1469802058554.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2607950735",
    "id" : "5FEA6DDE",
    "lastKnownWriteTime" : 1469787581,
    "last_content_update" : 1469787581,
    "path" : "C:/Users/Nadja/8-Freising/05_Tagungen_Workshops/GfÖ-Tagung 2016/Vizualization_Award/VizAward_shiny/server.R",
    "project_path" : "VizAward_shiny/server.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}