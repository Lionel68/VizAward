install.packages("raster")
install.packages("rgdal")
install.packages("RStoolbox")
install.packages("sp")
install.packages("rgeos")
update.packages()
install.packages(c("ape", "BH", "DBI", "DiagrammeR", "effects", "evaluate", "formatR", "htmlwidgets", "mvtnorm", "pracma", "RcppArmadillo", "stringi", "VGAM"))
install.packages("nlme")
setwd("C:/Users/Nadja/8-Freising/05_Tagungen_Workshops/GfÖ-Tagung 2016/Vizualization_Award")
library(rgdal)
library(sp)
library(maps)
library(mapdata)
library(plyr)
library(dplyr)
csv_file <- read.csv("../Vizualization_Award/Data/Marburg_data.csv",sep=",")
csv_file.df <- as.data.frame(csv_file)
names(csv_file.df)
csv_file.spdf <- SpatialPointsDataFrame(csv_file.df[,c("longitude","latitude")],
data = csv_file.df[c(3:10)])
head(csv_file.df)
as.numeric(csv_file.df$latitude)
gsub(",","",csv_file.df$latitude)
as.numeric(gsub(",","",csv_file.df$latitude)) -> csv_file.df$latitude_new
as.numeric(gsub(",","",csv_file.df$longitude)) -> csv_file.df$longitude_new
gsub(",","",csv_file.df$longitude)
head(csv_file.df)
as.numeric(gsub(",","",csv_file.df$latitude))/100000
gsub(",","",csv_file.df$latitude)
gsub(",","",csv_file.df$latitude) %>% paste(substr(.,1,2),substr(.,3,nchar(.)),sep = ".")
csv_file <- read.csv("../Vizualization_Award/Data/Marburg_data.csv",sep=",")
csv_file.df <- as.data.frame(csv_file)
head(csv_file.df)
csv_file <- read.csv("../Vizualization_Award/Data/Marburg_data.csv",sep=";")
csv_file.df <- as.data.frame(csv_file)
head(csv_file.df)
csv_file.spdf <- SpatialPointsDataFrame(csv_file.df[,c("longitude_new","latitude_new")],
data = csv_file.df[c(5:12)])
bbox(csv_file.spdf)
as.numeric(csv_file.df$latitude_new)
as.numeric(csv_file.df$latitude_new)/10000
as.numeric(csv_file.df$latitude_new)/1000000
summary(as.numeric(csv_file.df$latitude_new)/1000000)
which(as.numeric(csv_file.df$latitude_new)/1000000)<50)
which(as.numeric(csv_file.df$latitude_new)/1000000<50)
as.numeric(csv_file.df$longitude_new)/100000
which(as.numeric(csv_file.df$longitude_new)/1000000<8)
csv_file.df[which(as.numeric(csv_file.df$longitude_new)/1000000<8),]
csv_file.df[-which(as.numeric(csv_file.df$longitude_new)/1000000<8),]
csv_file.df[-which(as.numeric(csv_file.df$longitude_new)/1000000<8),] -> csv_clean.df
summary(csv_clean.df)
csv_clean.df[-which(as.numeric(csv_clean.df$latitude_new)/1000000<50),] -> csv_clean.df
csv_file.df[-which(as.numeric(csv_file.df$longitude_new)/1000000<8),] -> csv_clean.df
csv_clean.spdf <- SpatialPointsDataFrame(csv_clean.df[,c("longitude_new","latitude_new")],
data = csv_clean.df[c(5:12)])
bbox(csv_clean.spdf)
map(csv_clean.spdf)
points(csv_clean.spdf)
plot.new()
points(csv_clean.spdf)
germany <- readOGR("C:/Users/Nadja/8-Freising/03_BioHolz/03_Datasets/DEU_adm_shp","DEU_adm0")
plot(germany)
points(csv_clean.spdf)
csv_clean.df$latitude_new <- as.numeric(csv_clean.df$latitude_new)/1000000
csv_clean.df$longitude_new <- as.numeric(csv_clean.df$longitude_new)/1000000
csv_clean.spdf <- SpatialPointsDataFrame(csv_clean.df[,c("longitude_new","latitude_new")],
data = csv_clean.df[c(5:12)])
bbox(csv_clean.spdf)
points(csv_clean.spdf)
install.packages("RgoogleMaps")
library(RgoogleMaps)
bbox(csv_clean.spdf)
GetMap.bbox(c(8.6,8.9),c(50.7,50.9)) -> marburg_region
plot(marburg_region)
marburg_region
plot(marburg_region$myTile)
PlotOnStaticMap(marburg_region)
PlotPolysOnStaticMap(marburg_region,csv_clean.spdf)
PlotPointsOnStaticMap(marburg_region,csv_clean.spdf)
PlotPointsOnStaticMap(marburg_region)
points(csv_clean.spdf)
PlotOnStaticMap(marburg_region)
points(csv_clean.spdf)
csv_clean.spdf
coords(csv_clean.spdf)
csv_clean.spdf@coords
points(LatLon2XY(csv_clean.spdf@coords))
PlotOnStaticMap(marburg_region)
points(LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1]))
points(LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2))
LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)
PlotOnStaticMap(marburg_region,lat=LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)[,1],lon=LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)[,2])
LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)[,1]
LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)[,1]
LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)
str(LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2))
PlotOnStaticMap(marburg_region,lat=LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)$Coords[,1],lon=LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)$Coords[,2])
plot(csv_clean.spdf@coords[,1],csv_clean.spdf@coords[,2])
get.wd()
getwd()
load("C:/Users/Nadja/8-Freising/05_Tagungen_Workshops/GfÖ-Tagung 2016/Vizualization_Award/.RData")
