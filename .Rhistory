csv_file.tbl <- as.data.table(csv_file.df)
csv_file.tbl <- tbl_df(csv_file.df)
csv_file.tbl %>% select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_"))
csv_file.tbl %>% dpylr::select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_"))
csv_file.tbl %>% dplyr::select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_"))
csv_file.tbl %>% dplyr::select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = name)
csv_file.tbl %>% dplyr::select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
transmute(Longitude = longitude) %>% transmute(Latitude = latitude) %>% transmute(Group = name)
csv_file.tbl %>% dplyr::select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
transmute(Longitude = longitude) %>% transmute(Latitude = latitude)
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group"))) -> stores
stores
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = category) %>%
mutate(Labels = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group"))) -> stores
stores
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = category) %>%
mutate(Labels = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group","Labels"))) -> stores
stores
str(busstops_shp@data)
str(busstops_sel@data)
row.names(busroutes_sel@data)
row.names(busroutes_sel@data)[1:5]
row.names(busroutes_sel@coords)[1:5]
row.names(busstops_sel@coords)[1:5]
names(busstops_sel@coords)
head(busstops_sel@coords)
str(busstops_sel)
busstops <- as.data.frame(busroutes_sel)
head(busstops)
str(busstops)
dim(busstops_sel@coords)
busstops <- as.data.frame(busstops_sel)
busstops <- rbind(busstops, busstops_sel@data)
busstops <- cbind(busstops, busstops_sel@data)
str(busstops)
busstops <- as.data.frame(busstops_sel)
# add coordinates
busstops <- cbind(busstops, busstops_sel@coords)
str(busstops)
busstops <- as.data.frame(busstops_sel)
str(busstops)
row.names(busstops)
str(busstops)
View(busstops)
busstops %>% mutate(BusStopID = paste("Stop",row.names(busstops),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName")))
busstops %>% mutate(BusStopID = paste("Stop",row.names(busstops),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName"))) -> busstops
str(busstops)
levels(busstops$BusStopName)[1:25]
length(levels(busstops$BusStopName))
head(stores)
stores <- cbind(stores,as.data.frame(busstops[snap,"BusStopID"]))
library(plyr) # data handling
library(dplyr) # more data handling, piping (%>%)
library(sp)   # spatial objects
library(maps) # free maps of the world
library(mapdata) # world maps
library(RgoogleMaps) # get google maps
library(raster)  # raster data
library(rgdal)  # input/output, projections
library(rgeos)  # geometry operations
library(tidyr) # more data management
busstops_nearest <- busstops_sel[unique(snap),]
snap <- apply(spDists(csv.spdf, busstops_sel), 1, which.min)
proj4string(csv.spdf) <- proj4string(busstops_sel)
snap <- apply(spDists(csv.spdf, busstops_sel), 1, which.min)
busstops_nearest <- busstops_sel[unique(snap),]
stores <- cbind(stores,as.data.frame(busstops[snap,"BusStopID"]))
names(stores) <- c("StoreID", "Longitude", "Latitude", "Group","Labels","BusStopID")
head(stores)
head(busstops)
write.csv(x = busstops, file = "Data/busstops.csv",sep = ",", dec = ".")
write.table(x = busstops, file = "Data/busstops.csv",sep = ",", dec = ".")
busstop_tmp <- read.csv("Data/template_busstop.csv", sep = ",")
stores_tmp <- read.csv("Data/template_stores.csv", sep = ",")
str(busstop_tmp)
str(stores_tmp)
str(csv_file.df)
csv_file.tbl <- tbl_df(csv_file.df)
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = category) %>%
mutate(Labels = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group","Labels"))) -> stores
csv_file <- read.csv("Data/Marburg_data.csv",sep=";")
csv_file.df <- as.data.frame(csv_file)
head(csv_file.df)
summary(csv_file.df)
csv.spdf <- SpatialPointsDataFrame(csv_file.df[,c("longitude","latitude")],
data = csv_file.df)
csv_file.tbl <- tbl_df(csv_file.df)
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = category) %>%
mutate(Labels = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group","Labels"))) -> stores
stores$Group<-as.character(stores$Group)
stores$Group[stores$Group=="food"]<-"supermarket"
stores$Labels<-as.character(stores$Labels)
stores<-stores[validUTF8(stores$Labels),]
stores<-stores[validEnc(stores$Labels),]
str(busstops_sel)
head(busstops_sel@coords)
busstops
write.table(x = busstops, file = "Data/busstops_final.csv",sep = ",", dec = ".")
proj4string(csv.spdf) <- proj4string(busstops_sel)
snap <- apply(spDists(csv.spdf, busstops_sel), 1, which.min)
busstops_nearest <- busstops_sel[unique(snap),]
write.table(x = busstops_nearest, file = "Data/busstops_near.csv",sep = ",", dec = ".")
levels(as.facto(BusStopName))
levels(as.factor(busstops$BusStopName))
busstops %>% filter(substr(BusStopName,1,4)!="node")
busstops_sel <- as.data.frame(busstops_sel)
str(busstops_sel)
busstops_sel %>% mutate(BusStopID = paste("Stop",row.names(busstops_sel),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName"))) -> busstops_sel
busstops_sel %>% filter(substr(BusStopName,1,4)!="node") -> busstops
head(busstops)
levels(as.factor(busstops$BusStopName))
busstops_sel %>% filter(substr(BusStopName,1,4)!="node") -> busstops
levels(as.factor(busstops$BusStopName))
factor(busstops$BusStopName)
str(busstops)
busstops$BusStopName <- factor(busstops$BusStopName)
str(busstops)
busstops_sel <- crop(busstops_shp, marburg_area)
busroutes_shp <- readOGR(dsn = "../VizAward_Data/export.gpx", layer = "tracks")
busstops_shp <- readOGR(dsn = "../VizAward_Data/export.gpx", layer = "waypoints")
busroutes_sel <- crop(busroutes_shp, marburg_area)
busstops_sel <- crop(busstops_shp, marburg_area)
rm(busroutes_shp) # make space in the environment
rm(busstops_shp) # make space in the environment
str(busstops_sel)
head(busstops_sel@coords)
dim(busstops_sel@coords)
busstops_sel.df <- as.data.frame(busstops_sel)
str(busstops_sel.df)
busstops_sel.df %>% mutate(BusStopID = paste("Stop",row.names(busstops_sel.df),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName"))) -> busstops_sel.df
busstops_sel.df %>% filter(substr(BusStopName,1,4)!="node") -> busstops
busstops$BusStopName <- factor(busstops$BusStopName)
str(busstops)
proj4string(csv.spdf) <- proj4string(busstops_sel)
snap <- apply(spDists(csv.spdf, busstops_sel), 1, which.min)
busstops_nearest <- busstops_sel[unique(snap),]
str(busstops_sel)
class(busstops_sel)
busstops_sel[substr(busstops_sel$BusStopName,1,4)!="node",] -> busstops_subset
busstops_subset@data
substr(busstops_sel$BusStopName,1,4)
substr(busstops_sel@data$BusStopName,1,4)
busstops_sel[substr(busstops_sel$name,1,4)!="node",] -> busstops_subset
str(busstops_subset)
head(busstops_subset@data)
dim(busstops_subset@data)
busstops_subset.df <- as.data.frame(busstops_sel)
str(busstops_subset.df)
busstops_subset.df %>% mutate(BusStopID = paste("Stop",row.names(busstops_subset.df),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName"))) -> busstops_subset.df
busstops_subset.df$BusStopName <- factor(busstops_subset.df$BusStopName)
str(busstops_subset.df)
proj4string(csv.spdf) <- proj4string(busstops_subset)
snap <- apply(spDists(csv.spdf, busstops_subset), 1, which.min)
busstops_nearest <- busstops_subset[unique(snap),]
stores <- cbind(stores,as.data.frame(busstops[snap,"BusStopID"]))
names(stores) <- c("StoreID", "Longitude", "Latitude", "Group","Labels","BusStopID")
stores <- cbind(stores,as.data.frame(busstops_subset[snap,"BusStopID"]))
stores <- cbind(stores,as.data.frame(busstops_subset.df[snap,"BusStopID"]))
dim(busstops_sel@coords)
busstops_sel[substr(busstops_sel$name,1,4)!="node",] -> busstops_subset
dim(busstops_subset@coords)
plot(Hesse_roads_sel, lwd = 2, col = "lightgrey")
points(busstops_subset, col = "blue")
busstops_subset.df <- as.data.frame(busstops_subset)
str(busstops_subset.df)
busstops_subset.df %>% mutate(BusStopID = paste("Stop",row.names(busstops_subset.df),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName"))) -> busstops_subset.df
busstops_subset.df$BusStopName <- factor(busstops_subset.df$BusStopName)
str(busstops_subset.df)
snap <- apply(spDists(csv.spdf, busstops_subset), 1, which.min)
snap
dim(busstops_subset.df)
busstops_nearest <- busstops_subset.df[unique(snap),]
busstops_nearest.sp <-busstops_subset[unique(snap),]
points(busstops_nearest.sp, col = "green")
busstops_subset.df[snap,"BusStopID"]
csv_file.df[validUTF8(csv_file.df$name),] -> stores.sp
validUTF8(stores$Labels)
length(validUTF8(csv_file.tbl$name))
length(validUTF8(as.character(csv_file.tbl$name)))
csv_file.df[validUTF8(as.character(csv_file.tbl$name)),] -> stores.sp
stores.sp[validUTF8(as.character(stores.sp$name)),] -> stores.sp
proj4string(stores.sp) <- proj4string(busstops_subset)
str(stores.sp)
dim(csv.spdf@coords)
csv.spdf[validUTF8(as.character(csv.spdf$name)),] -> stores.sp
stores.sp[validUTF8(as.character(stores.sp$name)),] -> stores.sp
proj4string(stores.sp)
proj4string(busstops_subset)
snap <- apply(spDists(stores.sp, busstops_subset), 1, which.min)
busstops_nearest <- busstops_subset.df[unique(snap),]
busstops_nearest.sp <-busstops_subset[unique(snap),]
csv_file.tbl <- tbl_df(csv_file.df)
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = category) %>%
mutate(Labels = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group","Labels"))) -> stores
#rename some category
stores$Group<-as.character(stores$Group)
stores$Group[stores$Group=="food"]<-"supermarket"
stores$Labels<-as.character(stores$Labels)
#remove bad names
stores<-stores[validUTF8(stores$Labels),]
stores<-stores[validEnc(stores$Labels),]
dim(stores.sp@coords)
length(snap)
stores <- cbind(stores,busstops_subset.df[snap,"BusStopID"])
names(stores) <- c("StoreID", "Longitude", "Latitude", "Group","Labels","BusStopID")
head(stores)
write.table(x = busstops_nearest, file = "Data/busstops_near.csv",sep = ",", dec = ".")
write.table(x = stores, file = "Data/stores_busstops.csv",sep = ",", dec = ".")
library(plyr) # data handling
library(dplyr) # more data handling, piping (%>%)
library(sp)   # spatial objects
library(maps) # free maps of the world
library(mapdata) # world maps
library(RgoogleMaps) # get google maps
library(raster)  # raster data
library(rgdal)  # input/output, projections
library(rgeos)  # geometry operations
library(plyr)
library(dplyr)
library(tidyr) # more data management
extract(busroutes_sel, y = busstops_nearest.sp)
?extract
write.table(x = busstops_nearest, file = "Data/busstops_near.csv",sep = ",", dec = ".",row.names = F)
write.table(x = stores, file = "Data/stores_busstops.csv",sep = ",", dec = ".",row.names = F)
raster::extract(busroutes_sel, y = busstops_nearest.sp)
?rasterize
?gIntersects
rgeos::gIntersects(busstops_nearest.sp,busroutes_sel)
rgeos::gIntersects(busstops_nearest.sp,busroutes_sel, byid = T)
length(rgeos::gIntersects(busstops_nearest.sp,busroutes_sel, byid = T))
length(rgeos::gIntersects(busstops_nearest.sp[1,],busroutes_sel, byid = T))
busroutes_sel[rgeos::gIntersects(busstops_nearest.sp[1,],busroutes_sel, byid = T),]
busroutes_sel@data[rgeos::gIntersects(busstops_nearest.sp[1,],busroutes_sel, byid = T),]
str(busroutes_sel)
str(busroutes_sel@data)
levels(busroutes_sel@data$name)
plot(busroutes_sel[1,])
plot(Hesse_roads_sel, lwd = 2, col = "lightgrey")
points(busroutes_sel[1,],col="red")
plot(busroutes_sel[1,], col = "blue", add = T)
plot(Hesse_roads_sel, lwd = 2, col = "lightgrey")
plot(busroutes_sel, col = "blue", add = T)
?rgeos::gIntersects
busstops_nearest$BusStopName
?rbind.SpatialPointsDataFrame
Linie_2 <- c("Hauptbahnhof, A1","Bahnhofstraße, A1","Elisabethkirche, A1", "Volkshochschule", "Erwin-Piscator-Haus",
"Rudolphsplatz, A1","Gutenbergstraße, A3","Philippshaus","Wilhelmsplatz, A5","Radestraße",
"Frankfurter Straße A1", "Konrad-Adenauer-Brücke", "Südbahnhof, A7", "Südbahnhof, B4","Rollwiesenweg",
"Stadtbüro, A3")
busstops_nearest.sp$name%in%Linie_2
which(busstops_nearest.sp$name%in%Linie_2)
Linie_2 <- c("Hauptbahnhof, A1","BahnhofstraÃŸe, A1","Elisabethkirche, A1", "Volkshochschule", "Erwin-Piscator-Haus",
"Rudolphsplatz, A1","GutenbergstraÃŸe, A3","Philippshaus","Wilhelmsplatz, A5","RadestraÃŸe",
"Frankfurter StraÃŸe A1", "Konrad-Adenauer-Brücke", "SÃ¼dbahnhof, A7", "SÃ¼dbahnhof, B4","Rollwiesenweg",
"StadtbÃ¼ro, A3")
which(busstops_nearest.sp$name%in%Linie_2)
length(Linie_2)
which(busstops_subset.df$name%in%Linie_2)
which(busstops_subset$name%in%Linie_2)
busstops_nearest.sp[busstops_nearest.sp$name%in%Linie_2,]
str(busstops_nearest.sp[busstops_nearest.sp$name%in%Linie_2,])
busstops_nearest.sp[busstops_nearest.sp$name%in%Linie_2,] -> Linie_2_route
busstops_nearest.sp[busstops_nearest.sp$name%in%Linie_2,] -> Linie_2_stops
busroutes_sel[rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T),]
rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T)
busroutes_sel@data[rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T),]
busroutes_sel@data[rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T),] -> Linie_2_route
class(Linie_2_route)
busroutes_sel[rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T)] -> Linie_2_route
busroutes_sel[rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T),] -> Linie_2_route
busroutes_sel[[rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T)]] -> Linie_2_route
busroutes_sel[[rgeos::gIntersects(Linie_2_stops[1,],busroutes_sel, byid = T)]] -> Linie_2_route
busroutes_sel[rgeos::gIntersects(Linie_2_stops[1,],busroutes_sel, byid = T)] -> Linie_2_route
busroutes_sel[rgeos::gIntersects(Linie_2_stops[1,],busroutes_sel, byid = T),] -> Linie_2_route
class(Linie_2_stops)
class(busroutes_sel)
over(busroutes_sel,Linie_2_stops)
str(over(busroutes_sel,Linie_2_stops))
?over
zz <- gIntersection(busroutes_sel, Linie_2_stops)
class(zz)
plot(zz)
zz <- gIntersection(busroutes_sel, Linie_2_stops)
zz <- gIntersection(Linie_2_stops,busroutes_sel)
class(zz)
?gIntersection
zz
zz <- gIntersection(Linie_2_stops,busroutes_sel,drop_lower_td = TRUE)
zz
rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T)
str(rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T))
which(rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T))
length(which(rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T)))
coordinates(gIntersection(Linie_2_stops,busroutes_sel))
busroutes_sel[1,]
busroutes_sel[rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T)[,1],]
?any
apply(rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T),1,any)
which(apply(rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T),1,any))
busroutes_sel[apply(rgeos::gIntersects(Linie_2_stops,busroutes_sel, byid = T),1,any),] -> Linie_2_route
plot(Hesse_roads_sel, lwd = 2, col = "lightgrey")
plot(busroutes_sel, col = "blue", add = T)
plot(Linie_2_route, col = "red", add = T)
?save
busroute_2_shp <- readOGR(dsn = "../VizAward_Data/export_Linie2.gpx", layer = "tracks")
save(busroute_2_shp)
save(busroute_2_shp, file = "busroute_2_shp.RData")
busroute_1_shp <- readOGR(dsn = "../VizAward_Data/export_Linie1.gpx", layer = "tracks")
busroute_2_shp <- readOGR(dsn = "../VizAward_Data/export_Linie2.gpx", layer = "tracks")
busroute_3_shp <- readOGR(dsn = "../VizAward_Data/export_Linie3.gpx", layer = "tracks")
busroute_4_shp <- readOGR(dsn = "../VizAward_Data/export_Linie4.gpx", layer = "tracks")
busroute_5_shp <- readOGR(dsn = "../VizAward_Data/export_Linie5.gpx", layer = "tracks")
busroute_6_shp <- readOGR(dsn = "../VizAward_Data/export_Linie6.gpx", layer = "tracks")
busroute_7_shp <- readOGR(dsn = "../VizAward_Data/export_Linie7.gpx", layer = "tracks")
busroute_8_shp <- readOGR(dsn = "../VizAward_Data/export_Linie8.gpx", layer = "tracks")
busroute_9_shp <- readOGR(dsn = "../VizAward_Data/export_Linie9.gpx", layer = "tracks")
busroute_10_shp <- readOGR(dsn = "../VizAward_Data/export_Linie10.gpx", layer = "tracks")
library(plyr) # data handling
library(dplyr) # more data handling, piping (%>%)
library(sp)   # spatial objects
library(maps) # free maps of the world
library(mapdata) # world maps
library(RgoogleMaps) # get google maps
library(raster)  # raster data
library(rgdal)  # input/output, projections
library(rgeos)  # geometry operations
busroute_1_shp <- readOGR(dsn = "../VizAward_Data/export_Linie1.gpx", layer = "tracks")
busroute_2_shp <- readOGR(dsn = "../VizAward_Data/export_Linie2.gpx", layer = "tracks")
busroute_3_shp <- readOGR(dsn = "../VizAward_Data/export_Linie3.gpx", layer = "tracks")
busroute_4_shp <- readOGR(dsn = "../VizAward_Data/export_Linie4.gpx", layer = "tracks")
busroute_5_shp <- readOGR(dsn = "../VizAward_Data/export_Linie5.gpx", layer = "tracks")
busroute_6_shp <- readOGR(dsn = "../VizAward_Data/export_Linie6.gpx", layer = "tracks")
busroute_7_shp <- readOGR(dsn = "../VizAward_Data/export_Linie7.gpx", layer = "tracks")
busroute_8_shp <- readOGR(dsn = "../VizAward_Data/export_Linie8.gpx", layer = "tracks")
busroute_9_shp <- readOGR(dsn = "../VizAward_Data/export_Linie9.gpx", layer = "tracks")
busroute_10_shp <- readOGR(dsn = "../VizAward_Data/export_Linie10.gpx", layer = "tracks")
save(busroute_1_shp, file = "Data/busroute_1_shp.RData")
save(busroute_2_shp, file = "Data/busroute_2_shp.RData")
save(busroute_3_shp, file = "Data/busroute_3_shp.RData")
save(busroute_4_shp, file = "Data/busroute_4_shp.RData")
save(busroute_5_shp, file = "Data/busroute_5_shp.RData")
save(busroute_6_shp, file = "Data/busroute_6_shp.RData")
save(busroute_7_shp, file = "Data/busroute_7_shp.RData")
save(busroute_8_shp, file = "Data/busroute_8_shp.RData")
save(busroute_9_shp, file = "Data/busroute_9_shp.RData")
save(busroute_10_shp, file = "Data/busroute_10_shp.RData")
library(plyr) # data handling
library(dplyr) # more data handling, piping (%>%)
library(sp)   # spatial objects
library(maps) # free maps of the world
library(mapdata) # world maps
library(RgoogleMaps) # get google maps
library(raster)  # raster data
library(rgdal)  # input/output, projections
library(rgeos)  # geometry operations
library(tidyr) # more data management
str(busroute_1_shp@data)
levels(busroute_1_shp@data$name)
busstops_subset$name
which(busstops_subset$name%in%busroute_1_shp@data$name)
plot(Hesse_roads_sel, lwd = 2, col = "lightgrey")
plot(busroutes_sel, col = "blue", add = T)
plot(Linie_2_route, col = "red", add = T)
rm(Linie_2_route)
names(busstops_subset)
dim(busstops_subset)
dim(busstops_nearest.sp)
dim(busstops_nearest)
names(busstops_nearest)
busstop_nearest <- cbind(busstops_nearest, NbBusLine = 0, BusLine = "L-")
head(busstop_nearest)
which(busstops_nearest.sp$name%in%busroute_1_shp@data$name)
busstops_nearest[which(busstops_nearest.sp$name%in%busroute_1_shp@data$name),"NbBusLine"]+1
busstops_nearest[which(busstops_nearest.sp$name%in%busroute_1_shp@data$name),"NbBusLine"]<- busstops_nearest[which(busstops_nearest.sp$name%in%busroute_1_shp@data$name),"NbBusLine"]+1
busstops_nearest[which(busstops_nearest.sp$name%in%busroute_1_shp@data$name),"NbBusLine"]
busstops_nearest[which(busstops_nearest.sp$name%in%busroute_1_shp@data$name),5]
which(busstops_nearest.sp$name%in%busroute_1_shp@data$name)
class(which(busstops_nearest.sp$name%in%busroute_1_shp@data$name))
busstops_nearest[which(busstops_nearest.sp$name%in%busroute_1_shp@data$name),5]
list(busroute_1_shp,busroute_2_shp)
bus_line_list <- list(busroute_1_shp,busroute_2_shp,busroute_3_shp,busroute_4_shp,busroute_5_shp,
busroute_6_shp,busroute_7_shp,busroute_8_shp,busroute_9_shp,busroute_10_shp)
which(busstops_nearest.sp$name%in%bus_line_list[[i]]@data$name)
i=1
which(busstops_nearest.sp$name%in%bus_line_list[[i]]@data$name)
stops <- which(busstops_nearest.sp$name%in%bus_line_list[[i]]@data$name)
j=1
busstops_nearest[stops(j),5]
busstops_nearest[stops[j],5]
busstops_nearest[stops[j],]
busstop_nearest <- cbind(busstops_nearest, NbBusLine = 0, BusLine = "L-")
busstops_nearest[stops[j],"NbBusLine"]
rm(busstop_nearest)
busstops_nearest <- cbind(busstops_nearest, NbBusLine = 0, BusLine = "L-")
busstops_nearest[stops,"NbBusLine"]
busstops_nearest[stops,"NbBusLine"]+1
busstops_nearest <- busstops_subset.df[unique(snap),]
busstops_nearest <- cbind(busstops_nearest, NbBusLine = 0, BusLine = "L")
busstops_nearest[stops,"BusLine"]
paste(busstops_nearest[stops,"NbBusLine"],as.character(i),sep = "-")
paste(busstops_nearest[stops,"BusLine"],as.character(i),sep = "-")
rm(Linie_1_stops)
for (i in 1:10){
stops <- which(busstops_nearest.sp$name%in%bus_line_list[[i]]@data$name)
busstops_nearest[stops,"NbBusLine"] <- busstops_nearest[stops,"NbBusLine"]+1
busstops_nearest[stops,"BusLine"] <- paste(busstops_nearest[stops,"BusLine"],as.character(i),sep = "-")
}
busstops_nearest
str(busstops_nearest)
as.character(busstops_nearest$Busline)
str(busstops_nearest)
as.character(busstops_nearest$BusLine)
busstops_nearest <- cbind(busstops_nearest, NbBusLine = 0, BusLine = "L")
str(busstops_nearest)
busstops_nearest$BusLine <- as.character(busstops_nearest$BusLine)
str(busstops_nearest)
?as.character
busstops_nearest$BusLine <- as.character(busstops_nearest$BusLine,stringsAsFactors=FALSE)
str(busstops_nearest)
busstops_nearest <- busstops_subset.df[unique(snap),]
busstops_nearest <- cbind(busstops_nearest, NbBusLine = 0, BusLine = "L",stringsAsFactors=FALSE)
str(busstops_nearest)
for (i in 1:10){
stops <- which(busstops_nearest.sp$name%in%bus_line_list[[i]]@data$name)
busstops_nearest[stops,"NbBusLine"] <- busstops_nearest[stops,"NbBusLine"]+1
busstops_nearest[stops,"BusLine"] <- paste(busstops_nearest[stops,"BusLine"],as.character(i),sep = "-")
}
head(busstops_nearest)
busroute_6_shp@data$name
levels(busroute_6_shp@data$name)
busline_colors <- c("#a6cee3","#1f78b4","#b2df8a","#33a02c","#fb9a99","#e31a1c",
"#fdbf6f","#ff7f00","#cab2d6","#6a3d9a")
plot(Hesse_roads_sel, lwd = 2, col = "lightgrey")
for (i in 1: 10){
plot(bus_line_list[[i]], col = busline_colors[i], add = T)
}
write.table(x = busstops_nearest, file = "Data/busstops_near.csv",sep = ",", dec = ".",row.names = F)
save(bus_line_list, file ="Data/bus_line_list.RData")
subset(stores.sp,Group!="other_essentials")
stores.sp$category
levels(stores.sp$category)
subset(stores.sp,stores.sp$category!="other_essentials")
dim(stores.sp)
stores.sp<-subset(stores.sp,stores.sp$category!="other_essentials")
dim(stores.sp)
stores.sp[,c("Longitude","Latitude")]
head(stores.sp@data)
duplicated(stores.sp@coords[,c("Longitude","Latitude")])
stores.sp@coords[,c("Longitude","Latitude")]
names(stores.sp@coords)
head(stores.sp@coords)
duplicated(stores.sp@coords[,c("longitude","latitude")])
dim(stores)
stores<-subset(stores,Group!="other_essentials")
stores<-stores[-which(duplicated(stores[,c("Longitude","Latitude")])),]
stores.sp<-stores.sp[-which(duplicated(stores.sp@coords[,c("longitude","latitude")])),]
dim(stores.sp)
snap <- apply(spDists(stores.sp, busstops_subset), 1, which.min)
busstops_nearest <- busstops_subset.df[unique(snap),]
busstops_nearest.sp <-busstops_subset[unique(snap),]
names(stores)
head(stores)
busstops_nearest <- cbind(busstops_nearest, NbBusLine = 0, BusLine = "L",stringsAsFactors=FALSE)
str(busstops_nearest)
length(bus_line_list)
for (i in 1:length(bus_line_list)){
stops <- which(busstops_nearest.sp$name%in%bus_line_list[[i]]@data$name)
busstops_nearest[stops,"NbBusLine"] <- busstops_nearest[stops,"NbBusLine"]+1
busstops_nearest[stops,"BusLine"] <- paste(busstops_nearest[stops,"BusLine"],as.character(i),sep = "-")
}
head(busstops_nearest)
write.table(x = busstops_nearest, file = "Data/busstops_near.csv",sep = ",", dec = ".",row.names = F)
write.table(x = stores, file = "Data/stores_busstops.csv",sep = ",", dec = ".",row.names = F)
save(bus_line_list, file ="Data/bus_line_list.RData")
levels(busroute_7_shp@data$name)
