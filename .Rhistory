install.packages("raster")
install.packages("rgdal")
install.packages("RStoolbox")
install.packages("sp")
install.packages("rgeos")
update.packages()
install.packages(c("ape", "BH", "DBI", "DiagrammeR", "effects", "evaluate", "formatR", "htmlwidgets", "mvtnorm", "pracma", "RcppArmadillo", "stringi", "VGAM"))
install.packages("nlme")
setwd("C:/Users/Nadja/8-Freising/05_Tagungen_Workshops/GfÖ-Tagung 2016/Vizualization_Award")
library(rgdal)
library(sp)
library(maps)
library(mapdata)
library(plyr)
library(dplyr)
csv_file <- read.csv("../Vizualization_Award/Data/Marburg_data.csv",sep=",")
csv_file.df <- as.data.frame(csv_file)
names(csv_file.df)
csv_file.spdf <- SpatialPointsDataFrame(csv_file.df[,c("longitude","latitude")],
data = csv_file.df[c(3:10)])
head(csv_file.df)
as.numeric(csv_file.df$latitude)
gsub(",","",csv_file.df$latitude)
as.numeric(gsub(",","",csv_file.df$latitude)) -> csv_file.df$latitude_new
as.numeric(gsub(",","",csv_file.df$longitude)) -> csv_file.df$longitude_new
gsub(",","",csv_file.df$longitude)
head(csv_file.df)
as.numeric(gsub(",","",csv_file.df$latitude))/100000
gsub(",","",csv_file.df$latitude)
gsub(",","",csv_file.df$latitude) %>% paste(substr(.,1,2),substr(.,3,nchar(.)),sep = ".")
csv_file <- read.csv("../Vizualization_Award/Data/Marburg_data.csv",sep=",")
csv_file.df <- as.data.frame(csv_file)
head(csv_file.df)
csv_file <- read.csv("../Vizualization_Award/Data/Marburg_data.csv",sep=";")
csv_file.df <- as.data.frame(csv_file)
head(csv_file.df)
csv_file.spdf <- SpatialPointsDataFrame(csv_file.df[,c("longitude_new","latitude_new")],
data = csv_file.df[c(5:12)])
bbox(csv_file.spdf)
as.numeric(csv_file.df$latitude_new)
as.numeric(csv_file.df$latitude_new)/10000
as.numeric(csv_file.df$latitude_new)/1000000
summary(as.numeric(csv_file.df$latitude_new)/1000000)
which(as.numeric(csv_file.df$latitude_new)/1000000)<50)
which(as.numeric(csv_file.df$latitude_new)/1000000<50)
as.numeric(csv_file.df$longitude_new)/100000
which(as.numeric(csv_file.df$longitude_new)/1000000<8)
csv_file.df[which(as.numeric(csv_file.df$longitude_new)/1000000<8),]
csv_file.df[-which(as.numeric(csv_file.df$longitude_new)/1000000<8),]
csv_file.df[-which(as.numeric(csv_file.df$longitude_new)/1000000<8),] -> csv_clean.df
summary(csv_clean.df)
csv_clean.df[-which(as.numeric(csv_clean.df$latitude_new)/1000000<50),] -> csv_clean.df
csv_file.df[-which(as.numeric(csv_file.df$longitude_new)/1000000<8),] -> csv_clean.df
csv_clean.spdf <- SpatialPointsDataFrame(csv_clean.df[,c("longitude_new","latitude_new")],
data = csv_clean.df[c(5:12)])
bbox(csv_clean.spdf)
map(csv_clean.spdf)
points(csv_clean.spdf)
plot.new()
points(csv_clean.spdf)
germany <- readOGR("C:/Users/Nadja/8-Freising/03_BioHolz/03_Datasets/DEU_adm_shp","DEU_adm0")
plot(germany)
points(csv_clean.spdf)
csv_clean.df$latitude_new <- as.numeric(csv_clean.df$latitude_new)/1000000
csv_clean.df$longitude_new <- as.numeric(csv_clean.df$longitude_new)/1000000
csv_clean.spdf <- SpatialPointsDataFrame(csv_clean.df[,c("longitude_new","latitude_new")],
data = csv_clean.df[c(5:12)])
bbox(csv_clean.spdf)
points(csv_clean.spdf)
install.packages("RgoogleMaps")
library(RgoogleMaps)
bbox(csv_clean.spdf)
GetMap.bbox(c(8.6,8.9),c(50.7,50.9)) -> marburg_region
plot(marburg_region)
marburg_region
plot(marburg_region$myTile)
PlotOnStaticMap(marburg_region)
PlotPolysOnStaticMap(marburg_region,csv_clean.spdf)
PlotPointsOnStaticMap(marburg_region,csv_clean.spdf)
PlotPointsOnStaticMap(marburg_region)
points(csv_clean.spdf)
PlotOnStaticMap(marburg_region)
points(csv_clean.spdf)
csv_clean.spdf
coords(csv_clean.spdf)
csv_clean.spdf@coords
points(LatLon2XY(csv_clean.spdf@coords))
PlotOnStaticMap(marburg_region)
points(LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1]))
points(LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2))
LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)
PlotOnStaticMap(marburg_region,lat=LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)[,1],lon=LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)[,2])
LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)[,1]
LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)[,1]
LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)
str(LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2))
PlotOnStaticMap(marburg_region,lat=LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)$Coords[,1],lon=LatLon2XY(csv_clean.spdf@coords[,2],csv_clean.spdf@coords[,1],zoom=2)$Coords[,2])
plot(csv_clean.spdf@coords[,1],csv_clean.spdf@coords[,2])
get.wd()
getwd()
load("C:/Users/Nadja/8-Freising/05_Tagungen_Workshops/GfÖ-Tagung 2016/Vizualization_Award/.RData")
library(rgdal)
library(sp)
library(maps)
library(mapdata)
library(plyr)
library(dplyr)
library(RgoogleMaps)
library(raster)  # raster data
library(rgdal)  # input/output, projections
library(rgeos)  # geometry ops
library(rgdal)
library(sp)
library(maps)
library(mapdata)
library(plyr)
library(dplyr)
library(RgoogleMaps)
library(raster)  # raster data
library(rgdal)  # input/output, projections
library(rgeos)  # geometry ops
busroutes_shp <- readOGR(dsn = "../VizAward_Data/export.gpx", layer = "routes")
busroutes_shp <- readOGR(dsn = "../VizAward_Data/export.gpx", layer = "tracks")
plot(busroutes_shp)
busstops_shp <- readOGR(dsn = "../VizAward_Data/export.gpx", layer = "waypoints")
points(busstops_shp,col="red")
shiny::runApp('VizAward_shiny')
install.packages("leaflet")
runApp('VizAward_shiny')
busstops_shp@data
head(busstops_shp@data)
str(busstops_shp@data)
str(busroutes_shp@data)
summary(busroutes_shp@data)
summary(busstops_shp@data)
str(busstops_shp@coords)
bbox(csv_file.spdf)
csv_file <- read.csv("Data/Marburg_data.csv",sep=";")
csv_file.df <- as.data.frame(csv_file)
head(csv_file.df)
bbox(csv_clean.spdf)
marburg_area
marburg_area = extent(raster(xmn = 8.6893, xmx = 8.8145, ymn = 50.7700, ymx = 50.8437))
library(rgdal)
library(sp)
library(maps)
library(mapdata)
library(plyr)
library(dplyr)
library(RgoogleMaps)
library(raster)  # raster data
library(rgdal)  # input/output, projections
library(rgeos)  # geometry ops
csv_file <- read.csv("Data/Marburg_data.csv",sep=";")
csv_file.df <- as.data.frame(csv_file)
head(csv_file.df)
bbox(csv_file.spdf) # there are some problems in the data!
summary(csv_file.df) # there are some problems in the data!
csv_file <- read.csv("Data/Marburg_data.csv",sep=";")
csv_file.df <- as.data.frame(csv_file)
head(csv_file.df)
summary(csv_file.df)
head(csv_file.df)
csv.spdf <- SpatialPointsDataFrame(csv_file.df[,c("longitude","latitude")],
data = csv_file.df)
bbox(csv.spdf)
GetMap.bbox(c(8.6,8.9),c(50.7,50.9)) -> marburg_region # Google Maps
Hesse_roads <- readOGR("../VizAward_Data/hessen-latest.shp","roads")
rm(marburg_region)
Hesse_roads_sel = crop(Hesse_roads, marburg_area)
marburg_area = extent(raster(xmn = 8.6893, xmx = 8.8145, ymn = 50.7700, ymx = 50.8437))
Hesse_roads_sel = crop(Hesse_roads, marburg_area)
rm(Hesse_roads) # make space in the environment
busroutes_shp <- readOGR(dsn = "../VizAward_Data/export.gpx", layer = "tracks")
busstops_shp <- readOGR(dsn = "../VizAward_Data/export.gpx", layer = "waypoints")
busroutes_sel <- crop(busroutes_shp, marburg_area)
busstops_sel <- crop(busstops_shp, marburg_area)
rm(busroutes_shp) # make space in the environment
rm(busstops_shp) # make space in the environment
plot(Hesse_roads_sel, lwd = 2, col = "grey")
plot(busroutes_sel, col = "lightblue")
plot(Hesse_roads_sel, lwd = 2, col = "grey")
plot(busroutes_sel, col = "lightblue", add = T)
plot(Hesse_roads_sel, lwd = 2, col = "lightgrey")
plot(busroutes_sel, col = "lightblue", add = T)
points(busstops_sel,col="blue")
plot(Hesse_roads_sel, lwd = 2, col = "lightgrey")
plot(busroutes_sel, col = "lightblue", add = T)
points(busstops_sel,col="blue", cex = 0.5, pch = 16)
points(csv.spdf, col = "red", cex = 0.5, pch = 16)
plot(Hesse_roads_sel, lwd = 2, col = "lightgrey")
plot(busroutes_sel, col = "blue", add = T)
points(busstops_sel,col="darkblue", cex = 0.5, pch = 16)
points(csv.spdf, col = "red", cex = 0.5, pch = 16)
busstop_tmp <- read.csv("Data/template_busstop.csv", sep = ",")
stores_tmp <- read.csv("Data/template_stores.csv", sep = ",")
head(busstop_tmp)
str(busstop_tmp)
str(stores_tmp)
str(csv_file.df)
row.names(csv_file.df)
csv_file.df %>% select(latitude, longitude, name, category) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_"))
csv_file.df %>% select(c(latitude, longitude, name, category)) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_"))
library(plyr)
library(dplyr)
csv_file.df %>% select(c(latitude, longitude, name, category)) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_"))
class(csv_file)
csv_file.df %>% tbl_df()
library(tidyr)
csv_file.df %>% tbl_df() %>% select(c(latitude, longitude, name, category)) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_"))
??select
csv_file.df %>% tbl_df()
csv_file.tbl <- tbl_df(csv_file.df)
csv_file.tbl %>% select(c(latitude, longitude, name, category)) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_"))
csv_file.tbl <- data.table(csv_file.df)
csv_file.tbl <- as.data.table(csv_file.df)
csv_file.tbl <- tbl_df(csv_file.df)
csv_file.tbl %>% select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_"))
csv_file.tbl %>% dpylr::select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_"))
csv_file.tbl %>% dplyr::select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_"))
csv_file.tbl %>% dplyr::select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = name)
csv_file.tbl %>% dplyr::select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
transmute(Longitude = longitude) %>% transmute(Latitude = latitude) %>% transmute(Group = name)
csv_file.tbl %>% dplyr::select(one_of(c("latitude", "longitude", "name", "category"))) %>%
mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
transmute(Longitude = longitude) %>% transmute(Latitude = latitude)
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group"))) -> stores
stores
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = category) %>%
mutate(Labels = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group"))) -> stores
stores
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = category) %>%
mutate(Labels = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group","Labels"))) -> stores
stores
str(busstops_shp@data)
str(busstops_sel@data)
row.names(busroutes_sel@data)
row.names(busroutes_sel@data)[1:5]
row.names(busroutes_sel@coords)[1:5]
row.names(busstops_sel@coords)[1:5]
names(busstops_sel@coords)
head(busstops_sel@coords)
str(busstops_sel)
busstops <- as.data.frame(busroutes_sel)
head(busstops)
str(busstops)
dim(busstops_sel@coords)
busstops <- as.data.frame(busstops_sel)
busstops <- rbind(busstops, busstops_sel@data)
busstops <- cbind(busstops, busstops_sel@data)
str(busstops)
busstops <- as.data.frame(busstops_sel)
# add coordinates
busstops <- cbind(busstops, busstops_sel@coords)
str(busstops)
busstops <- as.data.frame(busstops_sel)
str(busstops)
row.names(busstops)
str(busstops)
View(busstops)
busstops %>% mutate(BusStopID = paste("Stop",row.names(busstops),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName")))
busstops %>% mutate(BusStopID = paste("Stop",row.names(busstops),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName"))) -> busstops
str(busstops)
levels(busstops$BusStopName)[1:25]
length(levels(busstops$BusStopName))
head(stores)
stores <- cbind(stores,as.data.frame(busstops[snap,"BusStopID"]))
library(plyr) # data handling
library(dplyr) # more data handling, piping (%>%)
library(sp)   # spatial objects
library(maps) # free maps of the world
library(mapdata) # world maps
library(RgoogleMaps) # get google maps
library(raster)  # raster data
library(rgdal)  # input/output, projections
library(rgeos)  # geometry operations
library(tidyr) # more data management
busstops_nearest <- busstops_sel[unique(snap),]
snap <- apply(spDists(csv.spdf, busstops_sel), 1, which.min)
proj4string(csv.spdf) <- proj4string(busstops_sel)
snap <- apply(spDists(csv.spdf, busstops_sel), 1, which.min)
busstops_nearest <- busstops_sel[unique(snap),]
stores <- cbind(stores,as.data.frame(busstops[snap,"BusStopID"]))
names(stores) <- c("StoreID", "Longitude", "Latitude", "Group","Labels","BusStopID")
head(stores)
head(busstops)
write.csv(x = busstops, file = "Data/busstops.csv",sep = ",", dec = ".")
write.table(x = busstops, file = "Data/busstops.csv",sep = ",", dec = ".")
busstop_tmp <- read.csv("Data/template_busstop.csv", sep = ",")
stores_tmp <- read.csv("Data/template_stores.csv", sep = ",")
str(busstop_tmp)
str(stores_tmp)
str(csv_file.df)
csv_file.tbl <- tbl_df(csv_file.df)
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = category) %>%
mutate(Labels = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group","Labels"))) -> stores
csv_file <- read.csv("Data/Marburg_data.csv",sep=";")
csv_file.df <- as.data.frame(csv_file)
head(csv_file.df)
summary(csv_file.df)
csv.spdf <- SpatialPointsDataFrame(csv_file.df[,c("longitude","latitude")],
data = csv_file.df)
csv_file.tbl <- tbl_df(csv_file.df)
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = category) %>%
mutate(Labels = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group","Labels"))) -> stores
stores$Group<-as.character(stores$Group)
stores$Group[stores$Group=="food"]<-"supermarket"
stores$Labels<-as.character(stores$Labels)
stores<-stores[validUTF8(stores$Labels),]
stores<-stores[validEnc(stores$Labels),]
str(busstops_sel)
head(busstops_sel@coords)
busstops
write.table(x = busstops, file = "Data/busstops_final.csv",sep = ",", dec = ".")
proj4string(csv.spdf) <- proj4string(busstops_sel)
snap <- apply(spDists(csv.spdf, busstops_sel), 1, which.min)
busstops_nearest <- busstops_sel[unique(snap),]
write.table(x = busstops_nearest, file = "Data/busstops_near.csv",sep = ",", dec = ".")
levels(as.facto(BusStopName))
levels(as.factor(busstops$BusStopName))
busstops %>% filter(substr(BusStopName,1,4)!="node")
busstops_sel <- as.data.frame(busstops_sel)
str(busstops_sel)
busstops_sel %>% mutate(BusStopID = paste("Stop",row.names(busstops_sel),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName"))) -> busstops_sel
busstops_sel %>% filter(substr(BusStopName,1,4)!="node") -> busstops
head(busstops)
levels(as.factor(busstops$BusStopName))
busstops_sel %>% filter(substr(BusStopName,1,4)!="node") -> busstops
levels(as.factor(busstops$BusStopName))
factor(busstops$BusStopName)
str(busstops)
busstops$BusStopName <- factor(busstops$BusStopName)
str(busstops)
busstops_sel <- crop(busstops_shp, marburg_area)
busroutes_shp <- readOGR(dsn = "../VizAward_Data/export.gpx", layer = "tracks")
busstops_shp <- readOGR(dsn = "../VizAward_Data/export.gpx", layer = "waypoints")
busroutes_sel <- crop(busroutes_shp, marburg_area)
busstops_sel <- crop(busstops_shp, marburg_area)
rm(busroutes_shp) # make space in the environment
rm(busstops_shp) # make space in the environment
str(busstops_sel)
head(busstops_sel@coords)
dim(busstops_sel@coords)
busstops_sel.df <- as.data.frame(busstops_sel)
str(busstops_sel.df)
busstops_sel.df %>% mutate(BusStopID = paste("Stop",row.names(busstops_sel.df),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName"))) -> busstops_sel.df
busstops_sel.df %>% filter(substr(BusStopName,1,4)!="node") -> busstops
busstops$BusStopName <- factor(busstops$BusStopName)
str(busstops)
proj4string(csv.spdf) <- proj4string(busstops_sel)
snap <- apply(spDists(csv.spdf, busstops_sel), 1, which.min)
busstops_nearest <- busstops_sel[unique(snap),]
str(busstops_sel)
class(busstops_sel)
busstops_sel[substr(busstops_sel$BusStopName,1,4)!="node",] -> busstops_subset
busstops_subset@data
substr(busstops_sel$BusStopName,1,4)
substr(busstops_sel@data$BusStopName,1,4)
busstops_sel[substr(busstops_sel$name,1,4)!="node",] -> busstops_subset
str(busstops_subset)
head(busstops_subset@data)
dim(busstops_subset@data)
busstops_subset.df <- as.data.frame(busstops_sel)
str(busstops_subset.df)
busstops_subset.df %>% mutate(BusStopID = paste("Stop",row.names(busstops_subset.df),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName"))) -> busstops_subset.df
busstops_subset.df$BusStopName <- factor(busstops_subset.df$BusStopName)
str(busstops_subset.df)
proj4string(csv.spdf) <- proj4string(busstops_subset)
snap <- apply(spDists(csv.spdf, busstops_subset), 1, which.min)
busstops_nearest <- busstops_subset[unique(snap),]
stores <- cbind(stores,as.data.frame(busstops[snap,"BusStopID"]))
names(stores) <- c("StoreID", "Longitude", "Latitude", "Group","Labels","BusStopID")
stores <- cbind(stores,as.data.frame(busstops_subset[snap,"BusStopID"]))
stores <- cbind(stores,as.data.frame(busstops_subset.df[snap,"BusStopID"]))
dim(busstops_sel@coords)
busstops_sel[substr(busstops_sel$name,1,4)!="node",] -> busstops_subset
dim(busstops_subset@coords)
plot(Hesse_roads_sel, lwd = 2, col = "lightgrey")
points(busstops_subset, col = "blue")
busstops_subset.df <- as.data.frame(busstops_subset)
str(busstops_subset.df)
busstops_subset.df %>% mutate(BusStopID = paste("Stop",row.names(busstops_subset.df),sep = "_")) %>%
mutate(Longitude = coords.x1) %>% mutate(Latitude = coords.x2 ) %>%
mutate(BusStopName = name) %>%
dplyr::select(one_of(c("BusStopID","Longitude", "Latitude", "BusStopName"))) -> busstops_subset.df
busstops_subset.df$BusStopName <- factor(busstops_subset.df$BusStopName)
str(busstops_subset.df)
snap <- apply(spDists(csv.spdf, busstops_subset), 1, which.min)
snap
dim(busstops_subset.df)
busstops_nearest <- busstops_subset.df[unique(snap),]
busstops_nearest.sp <-busstops_subset[unique(snap),]
points(busstops_nearest.sp, col = "green")
busstops_subset.df[snap,"BusStopID"]
csv_file.df[validUTF8(csv_file.df$name),] -> stores.sp
validUTF8(stores$Labels)
length(validUTF8(csv_file.tbl$name))
length(validUTF8(as.character(csv_file.tbl$name)))
csv_file.df[validUTF8(as.character(csv_file.tbl$name)),] -> stores.sp
stores.sp[validUTF8(as.character(stores.sp$name)),] -> stores.sp
proj4string(stores.sp) <- proj4string(busstops_subset)
str(stores.sp)
dim(csv.spdf@coords)
csv.spdf[validUTF8(as.character(csv.spdf$name)),] -> stores.sp
stores.sp[validUTF8(as.character(stores.sp$name)),] -> stores.sp
proj4string(stores.sp)
proj4string(busstops_subset)
snap <- apply(spDists(stores.sp, busstops_subset), 1, which.min)
busstops_nearest <- busstops_subset.df[unique(snap),]
busstops_nearest.sp <-busstops_subset[unique(snap),]
csv_file.tbl <- tbl_df(csv_file.df)
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = category) %>%
mutate(Labels = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group","Labels"))) -> stores
#rename some category
stores$Group<-as.character(stores$Group)
stores$Group[stores$Group=="food"]<-"supermarket"
stores$Labels<-as.character(stores$Labels)
#remove bad names
stores<-stores[validUTF8(stores$Labels),]
stores<-stores[validEnc(stores$Labels),]
dim(stores.sp@coords)
length(snap)
stores <- cbind(stores,busstops_subset.df[snap,"BusStopID"])
names(stores) <- c("StoreID", "Longitude", "Latitude", "Group","Labels","BusStopID")
head(stores)
write.table(x = busstops_nearest, file = "Data/busstops_near.csv",sep = ",", dec = ".")
write.table(x = stores, file = "Data/stores_busstops.csv",sep = ",", dec = ".")
