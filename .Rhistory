for(i in 1:length(unique(stores_lines$StoreID))){
store_name <- unique(stores_lines$StoreID)[i]
static_map <- addPolylines(static_map,
lat = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Latitude"])),
lng = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Longitude"])),
color = "grey", fillColor = "grey", fillOpacity = 0.9, weight = 2)
}
# static_map
# Saving the static map as png
saveWidget(static_map, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
leaflet() %>%
addTiles("https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGlvbmVsNjgiLCJhIjoiY2lyOHVtY2ZqMDAycmlsbHd3cXF4azhzdiJ9.FHJtGBW1bhjCr-JLnC4brw") %>%
#   ,option=tileOptions(minZoom=13,maxZoom=18)) %>%
#   setView(lng=8.774149, lat=50.810685,zoom = 16) %>%
setView(lng=8.773500, lat=50.810600,zoom = 15) %>%
addAwesomeMarkers(data=busstop_new,lng=~Longitude,lat=~Latitude,label=~Name2,icon=icon_bus)%>%
addAwesomeMarkers(lng=8.774149, lat=50.810685, popup="The conference venue",icon=icon_uni)%>%
addPolylines(data=bus_line_list[[1]],stroke=TRUE,color=col_line(1),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[2]],stroke=TRUE,color=col_line(2),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[3]],stroke=TRUE,color=col_line(3),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[4]],stroke=TRUE,color=col_line(4),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[5]],stroke=TRUE,color=col_line(5),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[6]],stroke=TRUE,color=col_line(6),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[7]],stroke=TRUE,color=col_line(7),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[8]],stroke=TRUE,color=col_line(8),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[9]],stroke=TRUE,color=col_line(9),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[10]],stroke=TRUE,color=col_line(10),noClip=FALSE,opacity = opacity_bus_lines) %>%
addCircleMarkers(data=stores,radius =10,color = ~circle_color(Group),stroke = FALSE, fillOpacity = 0.9) -> static_map
# Add lines between points and stops
for(i in 1:length(unique(stores_lines$StoreID))){
store_name <- unique(stores_lines$StoreID)[i]
static_map <- addPolylines(static_map,
lat = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Latitude"])),
lng = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Longitude"])),
color = "grey", fillColor = "grey", fillOpacity = 0.9, weight = 2)
}
# static_map
# Saving the static map as png
saveWidget(static_map, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
icon_bus<-makeAwesomeIcon(icon="bus",library = "fa",markerColor="darkblue",iconColor="white",
iconWidth = 15, iconHeight = 20)
leaflet() %>%
addTiles("https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGlvbmVsNjgiLCJhIjoiY2lyOHVtY2ZqMDAycmlsbHd3cXF4azhzdiJ9.FHJtGBW1bhjCr-JLnC4brw") %>%
#   ,option=tileOptions(minZoom=13,maxZoom=18)) %>%
#   setView(lng=8.774149, lat=50.810685,zoom = 16) %>%
setView(lng=8.773500, lat=50.810600,zoom = 15) %>%
addAwesomeMarkers(data=busstop_new,lng=~Longitude,lat=~Latitude,label=~Name2,icon=icon_bus,options = c(iconWidth = 38, iconHeight = 95))%>%
addAwesomeMarkers(lng=8.774149, lat=50.810685, popup="The conference venue",icon=icon_uni)%>%
addPolylines(data=bus_line_list[[1]],stroke=TRUE,color=col_line(1),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[2]],stroke=TRUE,color=col_line(2),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[3]],stroke=TRUE,color=col_line(3),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[4]],stroke=TRUE,color=col_line(4),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[5]],stroke=TRUE,color=col_line(5),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[6]],stroke=TRUE,color=col_line(6),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[7]],stroke=TRUE,color=col_line(7),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[8]],stroke=TRUE,color=col_line(8),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[9]],stroke=TRUE,color=col_line(9),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[10]],stroke=TRUE,color=col_line(10),noClip=FALSE,opacity = opacity_bus_lines) %>%
addCircleMarkers(data=stores,radius =10,color = ~circle_color(Group),stroke = FALSE, fillOpacity = 0.9) -> static_map
# Add lines between points and stops
for(i in 1:length(unique(stores_lines$StoreID))){
store_name <- unique(stores_lines$StoreID)[i]
static_map <- addPolylines(static_map,
lat = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Latitude"])),
lng = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Longitude"])),
color = "grey", fillColor = "grey", fillOpacity = 0.9, weight = 2)
}
# static_map
# Saving the static map as png
saveWidget(static_map, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
leaflet() %>%
addTiles("https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGlvbmVsNjgiLCJhIjoiY2lyOHVtY2ZqMDAycmlsbHd3cXF4azhzdiJ9.FHJtGBW1bhjCr-JLnC4brw") %>%
#   ,option=tileOptions(minZoom=13,maxZoom=18)) %>%
#   setView(lng=8.774149, lat=50.810685,zoom = 16) %>%
setView(lng=8.773500, lat=50.810600,zoom = 15) %>%
addAwesomeMarkers(data=busstop_new,lng=~Longitude,lat=~Latitude,label=~Name2,icon=icon_bus)%>%
#   addAwesomeMarkers(lng=8.774149, lat=50.810685, popup="The conference venue",icon=icon_uni)%>%
addPolylines(data=bus_line_list[[1]],stroke=TRUE,color=col_line(1),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[2]],stroke=TRUE,color=col_line(2),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[3]],stroke=TRUE,color=col_line(3),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[4]],stroke=TRUE,color=col_line(4),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[5]],stroke=TRUE,color=col_line(5),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[6]],stroke=TRUE,color=col_line(6),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[7]],stroke=TRUE,color=col_line(7),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[8]],stroke=TRUE,color=col_line(8),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[9]],stroke=TRUE,color=col_line(9),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[10]],stroke=TRUE,color=col_line(10),noClip=FALSE,opacity = opacity_bus_lines) %>%
addCircleMarkers(data=stores,radius =10,color = ~circle_color(Group),stroke = FALSE, fillOpacity = 0.9) -> static_map
# Add lines between points and stops
for(i in 1:length(unique(stores_lines$StoreID))){
store_name <- unique(stores_lines$StoreID)[i]
static_map <- addPolylines(static_map,
lat = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Latitude"])),
lng = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Longitude"])),
color = "grey", fillColor = "grey", fillOpacity = 0.9, weight = 2)
}
# static_map
# Saving the static map as png
saveWidget(static_map, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
static_map <- static_map %>% addLegend("bottomright", pal = circle_color, values = ~Group,
title = "Stores and other amenities",
opacity = 1, data = stores)
# Saving the static map as png
saveWidget(static_map, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
leaflet() %>%
addTiles("https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGlvbmVsNjgiLCJhIjoiY2lyOHVtY2ZqMDAycmlsbHd3cXF4azhzdiJ9.FHJtGBW1bhjCr-JLnC4brw") %>%
#   ,option=tileOptions(minZoom=13,maxZoom=18)) %>%
#   setView(lng=8.774149, lat=50.810685,zoom = 16) %>%
setView(lng=8.773500, lat=50.810600,zoom = 15) %>%
addAwesomeMarkers(data=busstop_new,lng=~Longitude,lat=~Latitude,label=~Name2,icon=icon_bus)%>%
#   addAwesomeMarkers(lng=8.774149, lat=50.810685, popup="The conference venue",icon=icon_uni)%>%
addPolylines(data=bus_line_list[[1]],stroke=TRUE,color=col_line(1),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[2]],stroke=TRUE,color=col_line(2),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[3]],stroke=TRUE,color=col_line(3),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[4]],stroke=TRUE,color=col_line(4),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[5]],stroke=TRUE,color=col_line(5),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[6]],stroke=TRUE,color=col_line(6),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[7]],stroke=TRUE,color=col_line(7),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[8]],stroke=TRUE,color=col_line(8),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[9]],stroke=TRUE,color=col_line(9),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[10]],stroke=TRUE,color=col_line(10),noClip=FALSE,opacity = opacity_bus_lines) %>%
addCircleMarkers(data=stores,radius =10,color = ~circle_color(Group),stroke = FALSE, fillOpacity = 0.9) -> static_map
# Add lines between points and stops
for(i in 1:length(unique(stores_lines$StoreID))){
store_name <- unique(stores_lines$StoreID)[i]
static_map <- addPolylines(static_map,
lat = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Latitude"])),
lng = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Longitude"])),
color = "grey", fillColor = "grey", fillOpacity = 0.9, weight = 2)
}
# Adding a legend
static_map <- static_map %>% addLegend("bottomright", pal = circle_color, values = ~Group,
title = "Stores and other amenities",
opacity = 1)
# Saving the static map as png
saveWidget(static_map, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
leaflet() %>%
addTiles("https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGlvbmVsNjgiLCJhIjoiY2lyOHVtY2ZqMDAycmlsbHd3cXF4azhzdiJ9.FHJtGBW1bhjCr-JLnC4brw") %>%
#   ,option=tileOptions(minZoom=13,maxZoom=18)) %>%
#   setView(lng=8.774149, lat=50.810685,zoom = 16) %>%
setView(lng=8.773500, lat=50.810600,zoom = 15) %>%
addAwesomeMarkers(data=busstop_new,lng=~Longitude,lat=~Latitude,label=~Name2,icon=icon_bus)%>%
#   addAwesomeMarkers(lng=8.774149, lat=50.810685, popup="The conference venue",icon=icon_uni)%>%
addPolylines(data=bus_line_list[[1]],stroke=TRUE,color=col_line(1),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[2]],stroke=TRUE,color=col_line(2),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[3]],stroke=TRUE,color=col_line(3),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[4]],stroke=TRUE,color=col_line(4),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[5]],stroke=TRUE,color=col_line(5),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[6]],stroke=TRUE,color=col_line(6),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[7]],stroke=TRUE,color=col_line(7),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[8]],stroke=TRUE,color=col_line(8),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[9]],stroke=TRUE,color=col_line(9),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[10]],stroke=TRUE,color=col_line(10),noClip=FALSE,opacity = opacity_bus_lines) %>%
addCircleMarkers(data=stores,radius =10,color = ~circle_color(Group),stroke = FALSE, fillOpacity = 0.9) -> static_map
# Add lines between points and stops
for(i in 1:length(unique(stores_lines$StoreID))){
store_name <- unique(stores_lines$StoreID)[i]
static_map <- addPolylines(static_map,
lat = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Latitude"])),
lng = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Longitude"])),
color = "grey", fillColor = "grey", fillOpacity = 0.9, weight = 2)
}
# Adding a legend
static_map <- static_map %>% addLegend("bottomright", pal = circle_color, values = stores$Group,
title = "Stores and other amenities",
opacity = 1)
saveWidget(static_map, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
stores$Group
unique(stores$Group)
legend_labels <- c("pharmacy","taxi","accomodation","supermarket","bakery","cafe",
"imbiss","bar/pub/bistro","restaurant")
legend_color <- colorNumeric(
palette = "Set3",
domain = legend_labels
)
stores %>% mutate(labels = Group)
stores %>% mutate(labels = Group) %>% mutate(ifelse(labels =="bar_pub_bistro","bar/pub/bistro",labels))
rm(legend_labels)
stores %>% mutate(labels = Group) %>%
mutate(ifelse(labels =="bar_pub_bistro","bar/pub/bistro",labels)) %>% stores
stores %>% mutate(labels = Group) %>%
mutate(ifelse(labels =="bar_pub_bistro","bar/pub/bistro",labels)) -> stores
legend_color <- colorNumeric(
palette = "Set3",
domain = stores$labels
)
legend_color <- colorFactor(
palette = "Set3",
domain = stores$labels
)
circle_color <- colorFactor(palette = "Set3", domain = stores$Group)
leaflet() %>%
addTiles("https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGlvbmVsNjgiLCJhIjoiY2lyOHVtY2ZqMDAycmlsbHd3cXF4azhzdiJ9.FHJtGBW1bhjCr-JLnC4brw") %>%
#   ,option=tileOptions(minZoom=13,maxZoom=18)) %>%
#   setView(lng=8.774149, lat=50.810685,zoom = 16) %>%
setView(lng=8.773500, lat=50.810600,zoom = 15) %>%
addAwesomeMarkers(data=busstop_new,lng=~Longitude,lat=~Latitude,label=~Name2,icon=icon_bus)%>%
#   addAwesomeMarkers(lng=8.774149, lat=50.810685, popup="The conference venue",icon=icon_uni)%>%
addPolylines(data=bus_line_list[[1]],stroke=TRUE,color=col_line(1),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[2]],stroke=TRUE,color=col_line(2),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[3]],stroke=TRUE,color=col_line(3),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[4]],stroke=TRUE,color=col_line(4),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[5]],stroke=TRUE,color=col_line(5),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[6]],stroke=TRUE,color=col_line(6),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[7]],stroke=TRUE,color=col_line(7),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[8]],stroke=TRUE,color=col_line(8),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[9]],stroke=TRUE,color=col_line(9),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[10]],stroke=TRUE,color=col_line(10),noClip=FALSE,opacity = opacity_bus_lines) %>%
addCircleMarkers(data=stores,radius =10,color = ~circle_color(Group),stroke = FALSE, fillOpacity = 0.9) -> static_map
# Add lines between points and stops
for(i in 1:length(unique(stores_lines$StoreID))){
store_name <- unique(stores_lines$StoreID)[i]
static_map <- addPolylines(static_map,
lat = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Latitude"])),
lng = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Longitude"])),
color = "grey", fillColor = "grey", fillOpacity = 0.9, weight = 2)
}
# Adding a legend
static_map <- static_map %>% addLegend("bottomright", pal = legend_color, values = legend_labels,
title = "Stores and other amenities",
opacity = 1)
# Saving the static map as png
saveWidget(static_map, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
length(unique(stores$Group))
circle_color <- colorFactor(palette = "Set3", domain = stores$Group,n = length(unique(stores$Group)))
legend_color <- colorFactor(palette = "Set3",domain = stores$labels,n = length(unique(stores$labels)))
unique(stores$labels)
stores %>% mutate(labels = Group) %>%
mutate(ifelse(labels =="bar_pub_bistro","bar/pub/bistro",labels)) -> stores
legend_color <- colorFactor(palette = "Set3",domain = stores$labels,n = length(unique(stores$labels)))
unique(stores$labels)
stores %>% mutate(labels = Group) %>%
mutate(ifelse(labels =="bar_pub_bistro","bar,pub,bistro",labels)) -> stores
unique(stores$labels)
stores %>% mutate(labels = Group) %>%
mutate(ifelse(labels %in% "bar_pub_bistro","bar,pub,bistro",labels))
stores %>% mutate(labels = Group) %>%
mutate(ifelse(labels %in% "bar_pub_bistro","bar,pub,bistro",labels)) -> stores
unique(stores$labels)
csv_file.tbl <- tbl_df(csv_file.df)
csv_file.tbl %>% mutate(StoreID = paste("Store",row.names(csv_file.df),sep = "_")) %>%
mutate(Longitude = longitude) %>% mutate(Latitude = latitude) %>% mutate(Group = category) %>%
mutate(Labels = name) %>%
dplyr::select(one_of(c("StoreID","Longitude", "Latitude", "Group","Labels"))) -> stores
stores$Group<-as.character(stores$Group)
stores$Group[stores$Group=="food"]<-"supermarket"
stores$Labels<-as.character(stores$Labels)
#remove bad names
stores<-stores[validUTF8(stores$Labels),]
stores<-stores[validEnc(stores$Labels),]
stores<-subset(stores,Group!="other_essentials")
#remove duplicated points
stores<-stores[-which(duplicated(stores[,c("Longitude","Latitude")])),]
# Repeat selection of spatialPointsDataframe
csv.spdf[validUTF8(as.character(csv.spdf$name)),] -> stores.sp
stores.sp[validUTF8(as.character(stores.sp$name)),] -> stores.sp
stores.sp<-subset(stores.sp,stores.sp$category!="other_essentials")
#remove duplicated points
stores.sp<-stores.sp[-which(duplicated(stores.sp@coords[,c("longitude","latitude")])),]
proj4string(stores.sp) <- proj4string(busstops_subset)
snap <- apply(spDists(stores.sp, busstops_subset), 1, which.min)
stores <- cbind(stores,busstop_new[snap_new,"Name2"])
names(stores) <- c("StoreID", "Longitude", "Latitude", "Group","Labels","Name2")
head(stores)
circle_color <- colorFactor(palette = "Set3", domain = stores$Group,n = length(unique(stores$Group)))
stores %>% mutate(legend_labels = Group) %>%
mutate(legend_labels = ifelse(labels %in% "bar_pub_bistro","bar,pub,bistro",labels))
stores %>% mutate(legend_labels = Group) %>%
mutate(legend_labels = ifelse(legend_labels %in% "bar_pub_bistro","bar,pub,bistro",legend_labels))
stores %>% mutate(legend_labels = Group) %>%
mutate(legend_labels = ifelse(legend_labels %in% "bar_pub_bistro","bar,pub,bistro",legend_labels)) -> stores
legend_color <- colorFactor(palette = "Set3",domain = stores$legend_labels,
n = length(unique(stores$legend_labels)))
unique(stores$legend_labels)
stores_lines <- stores
for (i in 1: nrow(stores)) {
stores_lines$Longitude[i] <- busstop_new[busstop_new$Name2 == as.character(stores_lines$Name2)[i],"Longitude"]
stores_lines$Latitude[i] <- busstop_new[busstop_new$Name2 == as.character(stores_lines$Name2)[i],"Latitude"]
}
stores_lines <- rbind(stores_lines,stores)
leaflet() %>%
addTiles("https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGlvbmVsNjgiLCJhIjoiY2lyOHVtY2ZqMDAycmlsbHd3cXF4azhzdiJ9.FHJtGBW1bhjCr-JLnC4brw") %>%
#   ,option=tileOptions(minZoom=13,maxZoom=18)) %>%
#   setView(lng=8.774149, lat=50.810685,zoom = 16) %>%
setView(lng=8.773500, lat=50.810600,zoom = 15) %>%
addAwesomeMarkers(data=busstop_new,lng=~Longitude,lat=~Latitude,label=~Name2,icon=icon_bus)%>%
#   addAwesomeMarkers(lng=8.774149, lat=50.810685, popup="The conference venue",icon=icon_uni)%>%
addPolylines(data=bus_line_list[[1]],stroke=TRUE,color=col_line(1),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[2]],stroke=TRUE,color=col_line(2),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[3]],stroke=TRUE,color=col_line(3),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[4]],stroke=TRUE,color=col_line(4),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[5]],stroke=TRUE,color=col_line(5),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[6]],stroke=TRUE,color=col_line(6),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[7]],stroke=TRUE,color=col_line(7),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[8]],stroke=TRUE,color=col_line(8),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[9]],stroke=TRUE,color=col_line(9),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[10]],stroke=TRUE,color=col_line(10),noClip=FALSE,opacity = opacity_bus_lines) %>%
addCircleMarkers(data=stores,radius =10,color = ~circle_color(Group),stroke = FALSE, fillOpacity = 0.9) -> static_map
# Add lines between points and stops
for(i in 1:length(unique(stores_lines$StoreID))){
store_name <- unique(stores_lines$StoreID)[i]
static_map <- addPolylines(static_map,
lat = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Latitude"])),
lng = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Longitude"])),
color = "grey", fillColor = "grey", fillOpacity = 0.9, weight = 2)
}
# Adding a legend
static_map <- static_map %>% addLegend("bottomright", pal = legend_color, values = stores$legend_labels,
title = "Stores and other amenities",
opacity = 1)
# Saving the static map as png
saveWidget(static_map, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
stores %>%
mutate(legend_labels = ifelse(legend_labels %in% "bar,pub,bistro","bar/pub/bistro",legend_labels))
stores %>%
mutate(legend_labels = ifelse(legend_labels %in% "bar,pub,bistro","bar/pub/bistro",legend_labels)) -> stores
legend_color <- colorFactor(palette = "Set3",domain = stores$legend_labels,
n = length(unique(stores$legend_labels)))
stores_lines <- stores
for (i in 1: nrow(stores)) {
stores_lines$Longitude[i] <- busstop_new[busstop_new$Name2 == as.character(stores_lines$Name2)[i],"Longitude"]
stores_lines$Latitude[i] <- busstop_new[busstop_new$Name2 == as.character(stores_lines$Name2)[i],"Latitude"]
}
stores_lines <- rbind(stores_lines,stores)
unique(stores$legend_labels)
legend_color
leaflet() %>%
addTiles("https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGlvbmVsNjgiLCJhIjoiY2lyOHVtY2ZqMDAycmlsbHd3cXF4azhzdiJ9.FHJtGBW1bhjCr-JLnC4brw") %>%
setView(lng=8.773500, lat=50.810600,zoom = 15) %>%
addAwesomeMarkers(data=busstop_new,lng=~Longitude,lat=~Latitude,label=~Name2,icon=icon_bus)%>%
addPolylines(data=bus_line_list[[1]],stroke=TRUE,color=col_line(1),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[2]],stroke=TRUE,color=col_line(2),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[3]],stroke=TRUE,color=col_line(3),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[4]],stroke=TRUE,color=col_line(4),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[5]],stroke=TRUE,color=col_line(5),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[6]],stroke=TRUE,color=col_line(6),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[7]],stroke=TRUE,color=col_line(7),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[8]],stroke=TRUE,color=col_line(8),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[9]],stroke=TRUE,color=col_line(9),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[10]],stroke=TRUE,color=col_line(10),noClip=FALSE,opacity = opacity_bus_lines) %>%
addCircleMarkers(data=stores,radius =10,color = ~circle_color(Group),stroke = FALSE, fillOpacity = 0.9) -> static_map
# Add lines between points and stops
for(i in 1:length(unique(stores_lines$StoreID))){
store_name <- unique(stores_lines$StoreID)[i]
static_map <- addPolylines(static_map,
lat = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Latitude"])),
lng = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Longitude"])),
color = "grey", fillColor = "grey", fillOpacity = 0.9, weight = 2)
}
# Adding a legend
static_map <- static_map %>% addLegend("bottomright", pal = legend_color, values = stores$legend_labels,
title = "Stores and other amenities",
opacity = 1)
# Saving the static map as png
saveWidget(static_map, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
html_legend <- "<img icon_bus >nearest bus stop"
static_map <- static_map %>% addControl(html = html_legend, position = "bottomleft")
saveWidget(static_map, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
html_legend <- "<span class="fa-stack fa-lg">
<i class="fa fa-square-o fa-stack-2x"></i>
<i class="fa fa-twitter fa-stack-1x"></i>
</span></i>nearest bus stop"
html_legend <- "<span class='fa-stack fa-lg'>
<i class='fa fa-square-o fa-stack-2x'></i>
<i class='fa fa-twitter fa-stack-1x'></i>
</span></i>nearest bus stop"
leaflet() %>%
addTiles("https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibGlvbmVsNjgiLCJhIjoiY2lyOHVtY2ZqMDAycmlsbHd3cXF4azhzdiJ9.FHJtGBW1bhjCr-JLnC4brw") %>%
setView(lng=8.773500, lat=50.810600,zoom = 15) %>%
addAwesomeMarkers(data=busstop_new,lng=~Longitude,lat=~Latitude,label=~Name2,icon=icon_bus)%>%
addPolylines(data=bus_line_list[[1]],stroke=TRUE,color=col_line(1),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[2]],stroke=TRUE,color=col_line(2),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[3]],stroke=TRUE,color=col_line(3),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[4]],stroke=TRUE,color=col_line(4),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[5]],stroke=TRUE,color=col_line(5),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[6]],stroke=TRUE,color=col_line(6),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[7]],stroke=TRUE,color=col_line(7),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[8]],stroke=TRUE,color=col_line(8),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[9]],stroke=TRUE,color=col_line(9),noClip=FALSE,opacity = opacity_bus_lines)%>%
addPolylines(data=bus_line_list[[10]],stroke=TRUE,color=col_line(10),noClip=FALSE,opacity = opacity_bus_lines) %>%
addCircleMarkers(data=stores,radius =10,color = ~circle_color(Group),stroke = FALSE, fillOpacity = 0.9) -> static_map
# Add lines between points and stops
for(i in 1:length(unique(stores_lines$StoreID))){
store_name <- unique(stores_lines$StoreID)[i]
static_map <- addPolylines(static_map,
lat = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Latitude"])),
lng = c(as.numeric(stores_lines[stores_lines$StoreID==store_name, "Longitude"])),
color = "grey", fillColor = "grey", fillOpacity = 0.9, weight = 2)
}
static_map <- static_map %>% addLegend("bottomright", pal = legend_color, values = stores$legend_labels,
title = "Stores and other amenities",
opacity = 1)
static_map_test <- static_map %>% addControl(html = html_legend, position = "bottomleft")
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
html_legend <- "<span class='fa-stack fa-lg'>
<i class='awesome-marker-icon-darkblue awesome-marker fa-stack-2x'></i>
<i class='fa fa-bus icon-white fa-stack-1x'></i>
</span></i>nearest bus stop"
static_map_test <- static_map %>% addControl(html = html_legend, position = "bottomleft")
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
html_legend <- "<span class='fa-stack fa-lg'>
<i class='awesome-marker-icon-darkblue awesome-marker' style='margin-left: -17px; margin-top: -42px; width: 35px; height: 45px; transform: translate3d(429px, 166px, 0px); z-index: 166;' fa-stack-2x'></i>
<i class='fa fa-bus icon-white fa-stack-1x'></i>
</span></i>nearest bus stop"
static_map_test <- static_map %>% addControl(html = html_legend, position = "bottomleft")
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
static_map_test <- static_map %>% addControl(html = html_legend, position = "centerright")
# Saving the static map as png
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
html_legend <- "<span class='fa-stack fa-lg'>
<i class='awesome-marker-icon-darkblue awesome-marker fa-stack-2x' style='margin-left: -17px; margin-top: -42px; width: 35px; height: 45px; '></i>
<i class='fa fa-bus icon-white fa-stack-1x'></i>
</span></i>nearest bus stop"
static_map_test <- static_map %>% addControl(html = html_legend, position = "bottomleft")
# Saving the static map as png
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
html_legend <- "<span class='fa-stack fa-lg'>
<i class='awesome-marker-icon-darkblue awesome-marker fa-stack-2x' style='margin-left: 0px; margin-top: 0px; width: 35px; height: 45px; '></i>
<i class='fa fa-bus icon-white fa-stack-1x'></i>
</span></i>nearest bus stop"
static_map_test <- static_map %>% addControl(html = html_legend, position = "bottomleft")
# Saving the static map as png
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
html_legend <- "<span <div class='awesome-marker-icon-darkblue awesome-marker leaflet-zoom-animated leaflet-clickable'
tabindex='0' style='margin-left: -17px; margin-top: -42px; width: 35px; height: 45px;
transform: translate3d(429px, 166px, 0px); z-index: 166;'><i class='fa fa-bus  icon-white'></i></div>
</span></i>nearest bus stop"
static_map_test <- static_map %>% addControl(html = html_legend, position = "bottomleft")
# Saving the static map as png
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
html_legend <- "<span> <div class='awesome-marker-icon-darkblue awesome-marker leaflet-zoom-animated leaflet-clickable'
tabindex='0' style='margin-left: -17px; margin-top: -42px; width: 35px; height: 45px;
transform: translate3d(429px, 166px, 0px); z-index: 166;'><i class='fa fa-bus  icon-white'></i></div>
</span>nearest bus stop"
static_map_test <- static_map %>% addControl(html = html_legend, position = "bottomleft")
# Saving the static map as png
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
html_legend <- "<div class='awesome-marker-icon-darkblue awesome-marker leaflet-zoom-animated leaflet-clickable'
tabindex='0' style='margin-left: -17px; margin-top: -42px; width: 35px; height: 45px;
transform: translate3d(429px, 166px, 0px); z-index: 166;'><i class='fa fa-bus  icon-white'></i></div>
nearest bus stop"
static_map_test <- static_map %>% addControl(html = html_legend, position = "bottomleft")
# Saving the static map as png
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
html_legend <- "<div class='awesome-marker-icon-darkblue awesome-marker leaflet-zoom-animated leaflet-clickable'
tabindex='0' style='width: 35px; height: 40px;background-size:cover'><i class='fa fa-bus  icon-white'></i></div>
nearest bus stop"
# <div class="awesome-marker-icon-darkblue awesome-marker leaflet-zoom-animated leaflet-clickable"
# tabindex="0" style="margin-left: -17px; margin-top: -42px; width: 35px; height: 45px;
# transform: translate3d(429px, 166px, 0px); z-index: 166;"><i class="fa fa-bus  icon-white"></i></div>
static_map_test <- static_map %>% addControl(html = html_legend, position = "bottomleft")
# Saving the static map as png
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
html_legend <- "<span>
<i class='fa fa-bus icon-white'></i>
</span></i>nearest bus stop"
static_map_test <- static_map %>% addControl(html = html_legend, position = "bottomleft")
# Saving the static map as png
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
?addControl
?addControl
static_map_test <- static_map %>% addControl(html = html_legend, position = "topright")
# Saving the static map as png
saveWidget(static_map_test, "static_map_temp.html", selfcontained = FALSE)
webshot("static_map_temp.html", file = "static_map.png",
cliprect = "viewport")
rm(static_map_test)
static_map <- static_map %>% addControl(html = html_legend, position = "topright")
